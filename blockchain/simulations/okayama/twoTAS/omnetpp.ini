[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
network = Scenario2

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 200s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
*.veinsManager.moduleType = "simu5g.nodes.cars.NRCar"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("okayama.launchd.xml")
*.veinsManager.updateInterval = 0.1s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobility.typename = "VeinsInetMobility"


##########################################################
#          Mobile network specific parameters            #
##########################################################

# Number of Resource Blocks
**.numBands = 25 

# Transmission Power
**.ueTxPower = 26
**.eNodeBTxPower = 46

# Enable dynamic association of UEs (based on best SINR)
*.car[*].cellularNic.nrPhy.dynamicCellAssociation = true
*.car[*].masterId = 0     # ignored if dynamic association is disabled
*.car[*].macCellId = 0    # ignored if dynamic association is disabled
*.car[*].nrMasterId = 1     # ignored if dynamic association is disabled
*.car[*].nrMacCellId = 1    # ignored if dynamic association is disabled

# Enable dynamic association of UEs (based on best SINR)
*.rsu*.cellularNic.nrPhy.dynamicCellAssociation = true
*.rsu*.masterId = 0     # ignored if dynamic association is disabled
*.rsu*.macCellId = 0    # ignored if dynamic association is disabled
*.rsu*.nrMasterId = 1     # ignored if dynamic association is disabled
*.rsu*.nrMacCellId = 1    # ignored if dynamic association is disabled

# eNodeB configuration
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1
**.gNodeB2.macCellId = 2
**.gNodeB2.macNodeId = 2 
**.gNodeB3.macCellId = 1
**.gNodeB3.macNodeId = 1
**.gNodeB4.macCellId = 2
**.gNodeB4.macNodeId = 2 

# Enable handover
*.car[*].cellularNic.nrPhy.enableHandover = true
*.rsu*.cellularNic.nrPhy.enableHandover = true
*.gNodeB*.cellularNic.phy.enableHandover = true
*.gNodeB*.cellularNic.phy.handoverLatency = 50ms
*.gNodeB*.cellInfo.broadcastMessageInterval = 1s # eNB will sends broadcast triggers every second

# X2 and SCTP configuration
*.gNodeB*.numX2Apps = 2    # one x2App per peering eNodeB
*.gNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gNodeB1.x2App[0].client.connectAddress = "gNodeB2%x2ppp0" 
*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp0" 
*.gNodeB3.x2App[0].client.connectAddress = "gNodeB4%x2ppp0" 
*.gNodeB4.x2App[0].client.connectAddress = "gNodeB3%x2ppp0"
*.gNodeB1.x2App[1].client.connectAddress = "gNodeB3%x2ppp1" 
*.gNodeB2.x2App[1].client.connectAddress = "gNodeB4%x2ppp1" 
*.gNodeB3.x2App[1].client.connectAddress = "gNodeB1%x2ppp1" 
*.gNodeB4.x2App[1].client.connectAddress = "gNodeB2%x2ppp1" 
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false
 

##########################################################
#                    App Layer                           #
##########################################################
# AS server
*.TAS*.numApps = 3
*.TAS*.app[0].typename = "AS"
*.TAS*.app[0].localPort = 1000
*.TAS*.app[0].vFile = "vehicle_data.csv"
*.TAS*.app[0].rFile = "rsu_data.csv"
*.TAS*.app[0].tgsId = 4567

# TGS server
*.TAS*.app[1].typename = "TGS"
*.TAS*.app[1].localPort = 1001
*.TAS1.app[1].path = "Scenario2.TAS1.app[2]"
*.TAS.app[1].path = "Scenario2.TAS.app[2]"

# TAS app
*.TAS*.app[2].typename = "TGSApp"
*.TAS*.app[2].localPort = 1002
*.TAS*.app[2].sendInterval = 1s
*.TAS*.app[2].messageLength = 40B
*.TAS*.app[2].destAddresses = "blockchain"
*.TAS*.app[2].destPort = 2000

# BlockChain
*.blockchain.numApps = 1
*.blockchain.app[0].typename = "BlockChainApp"
*.blockchain.app[0].localPort = 2000

# Vehicle
*.car[*].numApps = 1
*.car[*].app[0].typename = "Vehicle"
*.car[0..99].app[0].destAddresses = "TAS"
*.car[100..199].app[0].destAddresses = "TAS1"
*.car[*].app[0].localPort = 3000 + ancestorIndex(1)
*.car[*].app[0].destPort = 1000
*.car[0..99].app[0].tgsAddresses = "TAS"
*.car[100..199].app[0].tgsAddresses = "TAS1"
*.car[*].app[0].tgsPort = 1001
*.car[*].app[0].vehId = 0 + ancestorIndex(1)
*.car[0..24].app[0].rsuId = 0 
*.car[25..49].app[0].rsuId = 1 
*.car[50..74].app[0].rsuId = 2 
*.car[75..99].app[0].rsuId = 3 
*.car[100..124].app[0].rsuId = 4
*.car[125..149].app[0].rsuId = 5 
*.car[150..174].app[0].rsuId = 6 
*.car[175..199].app[0].rsuId = 7
*.car[0..24].app[0].rsuDest = "rsu1"
*.car[25..49].app[0].rsuDest = "rsu2" 
*.car[50..74].app[0].rsuDest = "rsu3" 
*.car[75..99].app[0].rsuDest = "rsu4" 
*.car[100..124].app[0].rsuDest = "rsu5"
*.car[125..149].app[0].rsuDest = "rsu6" 
*.car[150..174].app[0].rsuDest = "rsu7" 
*.car[175..199].app[0].rsuDest = "rsu8"
*.car[*].app[0].sendInterval = 1s
*.car[*].app[0].messageLength = 300B
*.car[*].app[0].rsuPort = 9000

*.rsu*.numApps = 1
*.rsu*.app[0].typename = "RSUApp"
*.rsu*.app[0].localPort = 9000
